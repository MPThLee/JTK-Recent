name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy by commit trigger.
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.author.name, 'dependabot')" # ignore dependabot
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: volta-cli/action@v1

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
          path: dist

      - name: NPM CI
        run: npm ci --no-audit

      - name: Build to JS
        run: npm run build

      - name: Generate Resources
        run: npm run start
        env: 
          JTK_CREDENTIALS_ENC_KEY: ${{ secrets.JTK_CREDENTIALS_ENC_KEY }}
          JTK_CREDENTIALS_ENC_IV: ${{ secrets.JTK_CREDENTIALS_ENC_IV }}
          JTK_BASEURL: ${{ secrets.JTK_BASEURL }}

      - name: Generate Index list
        run: npm run start:gen
      
      - name: Archive dist artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-archive
          retention-days: 7
          path: |
            dist/**/*.html
            !dist/index.html
            !dist/list.html

      # == DO NOT BACKUP IF TRIGGERED BY PUSH EVENT ==
      # - name: Deploy to gh-pages branch (Backup, Save)
      #   uses: JamesIves/github-pages-deploy-action@4.1.0
      #   with:
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: dist # The folder the action should deploy.
      #     clean: false
      #     single-commit: false
      #     token: ${{ secrets.BOT_PA_TOKEN }}
      #     git-config-name: "github-actions[bot]"
      #     git-config-email: "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Deploy to surge.sh (Prod)
        uses: dswistowski/surge-sh-action@v1
        continue-on-error: true
        with:
          domain: '${{ secrets.surge_domain }}'
          project: './dist'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
  # dump:
  #   name: github context dump.
  #   runs-on: ubuntu-latest
  #   if: ${{ true }}
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJSON(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJSON(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJSON(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJSON(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJSON(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"

